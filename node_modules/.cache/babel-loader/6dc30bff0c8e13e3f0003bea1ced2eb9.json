{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bootcamp\\\\React-batch15-day11 (Redux Saga)\\\\src\\\\ViewApi\\\\RegionView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport regionApi from '../api/regionApi';\nimport RegionAdd from './RegionAdd';\nimport RegionEdit from './RegionEdit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RegionView() {\n  _s();\n\n  const [region, setRegion] = useState([]);\n  const [display, setDisplay] = useState(false);\n  const [displayEdit, setDisplayEdit] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [id, setId] = useState({});\n  const [values, setValues] = useState({\n    region_id: undefined,\n    region_name: ''\n  });\n  useEffect(() => {\n    regionApi.list().then(data => {\n      setRegion(data);\n    });\n    setRefresh(false);\n  }, [refresh]);\n\n  const handleOnChange = name => event => {\n    setValues({ ...values,\n      [name]: event.target.value\n    });\n  };\n\n  const onEdit = async () => {\n    const payload = {\n      region_id: id.regID,\n      region_name: values.region_name\n    };\n    await regionApi.update(payload).then(() => {\n      setDisplayEdit(false);\n      setRefresh(true);\n      window.alert('Data Successfully Edit');\n    });\n  };\n\n  const onSubmit = async () => {\n    const payload = {\n      region_name: values.region_name\n    };\n    await regionApi.create(payload).then(() => {\n      setDisplay(false);\n      setRefresh(true);\n      window.alert('Data Successfully Insert');\n    });\n  };\n\n  const onDelete = async id => {\n    regionApi.deleted(id).then(() => {\n      setRefresh(true);\n      window.alert('Data Successfully Delete');\n    });\n  };\n\n  const onClick = regID => {\n    setDisplayEdit(true);\n    setId(regID);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: displayEdit ? /*#__PURE__*/_jsxDEV(RegionEdit, {\n        onSubmit: onEdit,\n        handleOnChange: handleOnChange,\n        id: id,\n        setDisplay: setDisplayEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this) : display ? /*#__PURE__*/_jsxDEV(RegionAdd, {\n        onSubmit: onSubmit,\n        handleOnChange: handleOnChange,\n        setDisplay: setDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"List Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setDisplay(true),\n          children: \" Add Region \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Region ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Region Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: region && region.map(reg => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: reg.region_id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: reg.region_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Country ID \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \" Country Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: reg && reg.countries.map(coun => {\n                      return /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: coun.country_id\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 105,\n                          columnNumber: 77\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: coun.country_name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 106,\n                          columnNumber: 77\n                        }, this)]\n                      }, coun.country_id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 104,\n                        columnNumber: 73\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onDelete(reg.region_id),\n                  children: \" Delete Region \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onClick({\n                    regID: reg.region_id\n                  }),\n                  children: \" Edit Region \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 57\n                }, this)]\n              }, reg.region_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 53\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RegionView, \"lmWDW0sMxSEHlraECxmk+8RE9hw=\");\n\n_c = RegionView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegionView\");","map":{"version":3,"names":["React","useState","useEffect","regionApi","RegionAdd","RegionEdit","RegionView","region","setRegion","display","setDisplay","displayEdit","setDisplayEdit","refresh","setRefresh","id","setId","values","setValues","region_id","undefined","region_name","list","then","data","handleOnChange","name","event","target","value","onEdit","payload","regID","update","window","alert","onSubmit","create","onDelete","deleted","onClick","map","reg","countries","coun","country_id","country_name"],"sources":["D:/Bootcamp/React-batch15-day11 (Redux Saga)/src/ViewApi/RegionView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport regionApi from '../api/regionApi'\nimport RegionAdd from './RegionAdd'\nimport RegionEdit from './RegionEdit'\n\nexport default function RegionView() {\n    const [region, setRegion] = useState([])\n    const [display, setDisplay] = useState(false)\n    const [displayEdit, setDisplayEdit] = useState(false)\n    const [refresh, setRefresh] = useState(false)\n    const [id, setId] = useState({})\n    const [values, setValues] = useState({\n        region_id: undefined,\n        region_name: '',\n    })\n    useEffect(() => {\n        regionApi.list().then(data => {\n            setRegion(data)\n        })\n        setRefresh(false)\n    }, [refresh])\n\n    const handleOnChange = name => event => {\n        setValues({ ...values, [name]: event.target.value })\n    }\n    const onEdit = async () => {\n        const payload = {\n            region_id: (id.regID),\n            region_name: (values.region_name)\n        }\n\n        await regionApi.update(payload)\n            .then(() => {\n                setDisplayEdit(false)\n                setRefresh(true)\n                window.alert('Data Successfully Edit')\n            })\n\n    }\n    const onSubmit = async () => {\n        const payload = {\n            region_name: (values.region_name)\n        }\n\n        await regionApi.create(payload)\n            .then(() => {\n                setDisplay(false)\n                setRefresh(true)\n                window.alert('Data Successfully Insert')\n            })\n\n    }\n    const onDelete = async (id) => {\n        regionApi.deleted(id)\n            .then(() => {\n                setRefresh(true)\n                window.alert('Data Successfully Delete')\n            })\n    }\n    const onClick = (regID) => {\n        setDisplayEdit(true)\n        setId(regID)\n    }\n    return (\n        <div>\n            <div>\n                {\n                    displayEdit\n                        ?\n                        <RegionEdit\n                            onSubmit={onEdit}\n                            handleOnChange={handleOnChange}\n                            id={id}\n                            setDisplay={setDisplayEdit}\n                        />\n                        :\n                        display ?\n                            <RegionAdd\n                                onSubmit={onSubmit}\n                                handleOnChange={handleOnChange}\n                                setDisplay={setDisplay}\n                            />\n                            :\n                            <>\n                                <h2>List Region</h2>\n                                <button onClick={() => setDisplay(true)}> Add Region </button>\n                                <table>\n                                    <th>Region ID</th>\n                                    <th>Region Name</th>\n                                    <th>Country</th>\n                                    <tbody>\n                                        {\n                                            region && region.map(reg => {\n                                                return (\n                                                    <tr key={reg.region_id}>\n                                                        <td>{reg.region_id}</td>\n                                                        <td>{reg.region_name}</td>\n                                                        <table>\n                                                            <th>Country ID </th>\n                                                            <th> Country Name</th>\n                                                            <tbody>\n                                                                {reg && reg.countries.map(coun => {\n                                                                    return (\n                                                                        <tr key={coun.country_id}>\n                                                                            <td>{coun.country_id}</td>\n                                                                            <td>{coun.country_name}</td>\n                                                                        </tr>\n                                                                    )\n                                                                })}\n                                                            </tbody>\n                                                        </table>\n                                                        <button onClick={() => onDelete(reg.region_id)}> Delete Region </button>\n                                                        <button onClick={() => onClick({ regID: reg.region_id })}> Edit Region </button>\n                                                    </tr>\n                                                )\n                                            })\n                                        }\n                                    </tbody>\n                                </table>\n                            </>\n                }\n            </div>\n        </div>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}