{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport apiRegion from '../../api/regionApi';\nimport { GetRegionSuccess, GetRegionFailed, DelRegionSuccess, DelRegionFailed, AddRegionSuccess, AddRegionFailed } from '../Action/RegionAction';\n\nfunction* handleGetRegion() {\n  try {\n    const result = yield call(apiRegion.list);\n    yield put(GetRegionSuccess(result));\n  } catch (error) {\n    yield put(GetRegionFailed(error));\n  }\n}\n\nfunction* handleDelRegion(action) {\n  const {\n    payload\n  } = action;\n\n  try {\n    const result = yield call(apiRegion.deleted, payload);\n    yield put(DelRegionSuccess(payload));\n  } catch (error) {\n    yield put(DelRegionFailed(error));\n  }\n}\n\nfunction* handleAddRegion(action) {\n  const {\n    payload\n  } = action;\n\n  try {\n    const result = yield call(apiRegion.create, payload);\n    yield put(AddRegionSuccess(result.data));\n  } catch (error) {\n    yield put(AddRegionFailed(error));\n  }\n}\n\nexport { handleGetRegion, handleDelRegion, handleAddRegion };","map":{"version":3,"names":["call","put","apiRegion","GetRegionSuccess","GetRegionFailed","DelRegionSuccess","DelRegionFailed","AddRegionSuccess","AddRegionFailed","handleGetRegion","result","list","error","handleDelRegion","action","payload","deleted","handleAddRegion","create","data"],"sources":["D:/Bootcamp/React-batch15-day11 (Redux Saga)/src/Redux-saga/Middleware/RegionMiddle.js"],"sourcesContent":["import {call,put} from 'redux-saga/effects'\nimport apiRegion from '../../api/regionApi'\nimport { GetRegionSuccess,GetRegionFailed, DelRegionSuccess, DelRegionFailed, AddRegionSuccess, AddRegionFailed } from '../Action/RegionAction'\n\nfunction* handleGetRegion(){\n    try {\n        const result = yield call(apiRegion.list)\n        yield put(GetRegionSuccess(result))\n    } catch (error) {\n        yield put(GetRegionFailed(error))\n    }\n}\n\nfunction* handleDelRegion(action){\n    const{payload} = action\n    try {\n        const result = yield call(apiRegion.deleted,payload)\n        yield put(DelRegionSuccess(payload))\n    } catch (error) {\n        yield put(DelRegionFailed(error))\n    }\n}\n\nfunction* handleAddRegion(action){\n    const {payload} = action\n    try {\n        const result = yield call(apiRegion.create,payload)\n        yield put(AddRegionSuccess(result.data))\n    } catch (error) {\n        yield put(AddRegionFailed(error))\n    }\n}\n\nexport {\n    handleGetRegion,\n    handleDelRegion,\n    handleAddRegion\n}"],"mappings":"AAAA,SAAQA,IAAR,EAAaC,GAAb,QAAuB,oBAAvB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,gBAAT,EAA0BC,eAA1B,EAA2CC,gBAA3C,EAA6DC,eAA7D,EAA8EC,gBAA9E,EAAgGC,eAAhG,QAAuH,wBAAvH;;AAEA,UAAUC,eAAV,GAA2B;EACvB,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMV,IAAI,CAACE,SAAS,CAACS,IAAX,CAAzB;IACA,MAAMV,GAAG,CAACE,gBAAgB,CAACO,MAAD,CAAjB,CAAT;EACH,CAHD,CAGE,OAAOE,KAAP,EAAc;IACZ,MAAMX,GAAG,CAACG,eAAe,CAACQ,KAAD,CAAhB,CAAT;EACH;AACJ;;AAED,UAAUC,eAAV,CAA0BC,MAA1B,EAAiC;EAC7B,MAAK;IAACC;EAAD,IAAYD,MAAjB;;EACA,IAAI;IACA,MAAMJ,MAAM,GAAG,MAAMV,IAAI,CAACE,SAAS,CAACc,OAAX,EAAmBD,OAAnB,CAAzB;IACA,MAAMd,GAAG,CAACI,gBAAgB,CAACU,OAAD,CAAjB,CAAT;EACH,CAHD,CAGE,OAAOH,KAAP,EAAc;IACZ,MAAMX,GAAG,CAACK,eAAe,CAACM,KAAD,CAAhB,CAAT;EACH;AACJ;;AAED,UAAUK,eAAV,CAA0BH,MAA1B,EAAiC;EAC7B,MAAM;IAACC;EAAD,IAAYD,MAAlB;;EACA,IAAI;IACA,MAAMJ,MAAM,GAAG,MAAMV,IAAI,CAACE,SAAS,CAACgB,MAAX,EAAkBH,OAAlB,CAAzB;IACA,MAAMd,GAAG,CAACM,gBAAgB,CAACG,MAAM,CAACS,IAAR,CAAjB,CAAT;EACH,CAHD,CAGE,OAAOP,KAAP,EAAc;IACZ,MAAMX,GAAG,CAACO,eAAe,CAACI,KAAD,CAAhB,CAAT;EACH;AACJ;;AAED,SACIH,eADJ,EAEII,eAFJ,EAGII,eAHJ"},"metadata":{},"sourceType":"module"}